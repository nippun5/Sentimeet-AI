generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String                  @id @default(uuid()) @db.Uuid
  email        String                  @unique
  firstname    String?
  lastname     String?
  password     String
  refreshToken String?
  createdAt    DateTime                @default(now())
  updatedAt    DateTime                @updatedAt
  meetings     MeetingParticipants[]   @relation("UserMeetings")

  @@map("users")
}

model Meeting {
  id               String                 @id @default(uuid()) @db.Uuid
  title            String
  description      String?
  transcription    String?
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  participants     MeetingParticipants[]  @relation("MeetingParticipants")
  meetingAnalytics Json?
  meetingSummary   String?
  meetingTasks     MeetingTasks[]         @relation("MeetingTasks")

  @@map("meetings")
}

model MeetingParticipants {
  id         String   @id @default(uuid()) @db.Uuid
  meetingId  String   @db.Uuid
  userId     String   @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  meeting    Meeting  @relation("MeetingParticipants", fields: [meetingId], references: [id])
  user       User     @relation("UserMeetings", fields: [userId], references: [id])

  @@map("meeting_participants")
}

model MeetingTasks {
  id         String   @id @default(uuid()) @db.Uuid
  meetingId  String   @db.Uuid
  assignee   String?
  task       String?
  deadline   String?

  meeting    Meeting  @relation("MeetingTasks", fields: [meetingId], references: [id])

  @@map("meeting_tasks")
}